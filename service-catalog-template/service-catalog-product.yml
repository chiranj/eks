AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS Service Catalog - EKS Cluster with Add-ons (Terraform Reference Engine)'

Metadata:
  AWS::ServiceCatalog::Display:
    Provider:
      Name: 'AWS'
    ProviderUrl: 'https://aws.amazon.com'
    Version: 1.0
    Description: 'EKS Cluster with optional add-ons using Terraform Reference Engine'
    Bullets:
      - 'Creates an EKS cluster with managed node groups'
      - 'Optional add-ons: AWS Load Balancer Controller, Karpenter/Cluster Autoscaler, KEDA, External DNS, and Prometheus'
      - 'Automatic GitLab integration for Kubernetes components installation'
      - 'Uses Terraform Reference Engine for deployment'

Resources:
  # ServiceCatalogTerraformProduct is a custom resource that the Terraform Reference Engine creates
  # This connects the Service Catalog product to the Terraform code in the repository
  ServiceCatalogTerraformProduct:
    Type: "Custom::ServiceCatalogTerraformProduct"
    Properties:
      ServiceToken: "${TerraformEngineServiceToken}"
      TerraformConfigPath: "./sc-product-terraform"
      # Parameters below are passed to Terraform and match variables.tf in sc-product-terraform
      # These will be populated from Service Catalog product launch parameters
      Parameters:
        cluster_name: "${ClusterName}"
        cluster_version: "${ClusterVersion}"
        region: "${Region}"
        vpc_mode: "${VpcMode}"
        vpc_id: "${VpcId}"
        subnet_ids: "${SubnetIds}"
        control_plane_subnet_ids: "${ControlPlaneSubnetIds}"
        vpc_cidr: "${NewVpcCidr}"
        cluster_endpoint_public_access: "${ClusterEndpointPublicAccess}"
        cluster_endpoint_private_access: "${ClusterEndpointPrivateAccess}"
        node_group_name: "${NodeGroupName}"
        node_group_instance_type: "${NodeGroupInstanceType}"
        node_group_desired_capacity: "${NodeGroupDesiredCapacity}"
        node_group_min_size: "${NodeGroupMinSize}"
        node_group_max_size: "${NodeGroupMaxSize}"
        enable_aws_load_balancer_controller: "${EnableAwsLoadBalancerController}"
        node_scaling_method: "${NodeScalingMethod}"
        enable_keda: "${EnableKeda}"
        enable_external_dns: "${EnableExternalDns}"
        external_dns_hosted_zone_source: "${ExternalDnsHostedZoneSource}"
        external_dns_existing_hosted_zone_id: "${ExternalDnsExistingHostedZoneId}"
        external_dns_domain: "${ExternalDnsDomain}"
        enable_prometheus: "${EnablePrometheus}"
        enable_secrets_manager: "${EnableSecretsManager}"
        enable_cert_manager: "${EnableCertManager}"
        enable_nginx_ingress: "${EnableNginxIngress}"
        enable_adot: "${EnableAdot}"
        enable_fluent_bit: "${EnableFluentBit}"
        trigger_gitlab_pipeline: "${TriggerGitlabPipeline}"
        # These static parameters are defined in the Terraform Reference Engine manifest
        # and are not exposed as product parameters
        
Outputs:
  ClusterId:
    Description: 'The name/id of the EKS cluster'
    Value: !GetAtt ServiceCatalogTerraformProduct.Outputs.cluster_id
    
  ClusterArn:
    Description: 'The Amazon Resource Name (ARN) of the cluster'
    Value: !GetAtt ServiceCatalogTerraformProduct.Outputs.cluster_arn
    
  ClusterEndpoint:
    Description: 'The endpoint for the EKS Kubernetes API'
    Value: !GetAtt ServiceCatalogTerraformProduct.Outputs.cluster_endpoint
    
  ClusterOidcIssuerUrl:
    Description: 'The URL on the EKS cluster for the OpenID Connect identity provider'
    Value: !GetAtt ServiceCatalogTerraformProduct.Outputs.cluster_oidc_issuer_url
    
  OidcProviderArn:
    Description: 'The ARN of the OIDC Provider'
    Value: !GetAtt ServiceCatalogTerraformProduct.Outputs.oidc_provider_arn
    
  VpcId:
    Description: 'The ID of the VPC'
    Value: !GetAtt ServiceCatalogTerraformProduct.Outputs.vpc_id