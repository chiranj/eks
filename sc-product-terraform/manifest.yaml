schemaVersion: 1.0.0

# Product information
productInfo:
  name: "EKS Cluster with Add-ons"
  owner: "Platform Team"
  description: "EKS Cluster with optional add-ons using Terraform Reference Engine"
  distributor: "AWS"
  version: "1.0.0"
  support: "https://github.com/your-org/eks-service-catalog"

# Terraform configuration
terraform:
  version: "1.5.0"
  sources: 
    - source: hashicorp/aws
      version: "~> 5.0"
    - source: terraform-aws-modules/eks
      version: "~> 19.0"
    - source: terraform-aws-modules/vpc
      version: "~> 5.0"

# Parameters that will be exposed to Service Catalog users
parameters:
  - name: "ClusterName"
    type: "String"
    description: "Name of the EKS cluster"
    default: "eks-cluster"
    tfVariable: "cluster_name"
    
  - name: "ClusterVersion"
    type: "String"
    description: "Kubernetes version to use for the EKS cluster"
    default: "1.29"
    allowedValues: ["1.28", "1.29", "1.30"]
    tfVariable: "cluster_version"
    
  - name: "VpcMode"
    type: "String"
    description: "Select whether to use an existing VPC or create a new one"
    default: "existing"
    allowedValues: ["existing", "create_new"]
    tfVariable: "vpc_mode"
    
  - name: "VpcId"
    type: "AWS::EC2::VPC::Id"
    description: "VPC ID for the EKS cluster (required if using an existing VPC)"
    tfVariable: "vpc_id"
    default: ""
    conditionalOnParameter: "VpcMode"
    conditionalValue: "existing"
    
  - name: "SubnetIds"
    type: "List<AWS::EC2::Subnet::Id>"
    description: "A list of subnet IDs where the nodes/node groups will be provisioned (required if using an existing VPC)"
    tfVariable: "subnet_ids"
    conditionalOnParameter: "VpcMode"
    conditionalValue: "existing"
    
  - name: "ControlPlaneSubnetIds"
    type: "List<AWS::EC2::Subnet::Id>"
    description: "A list of subnet IDs where the EKS control plane (ENIs) will be provisioned (required if using an existing VPC)"
    tfVariable: "control_plane_subnet_ids"
    conditionalOnParameter: "VpcMode"
    conditionalValue: "existing"
    
  - name: "NewVpcCidr"
    type: "String"
    description: "CIDR block for the new VPC (only used if creating a new VPC)"
    default: "10.0.0.0/16"
    tfVariable: "vpc_cidr"
    conditionalOnParameter: "VpcMode"
    conditionalValue: "create_new"
    
  - name: "Region"
    type: "String"
    description: "AWS region"
    default: "us-east-1"
    tfVariable: "region"
    
  - name: "ClusterEndpointPublicAccess"
    type: "String"
    description: "Indicates whether or not the Amazon EKS public API server endpoint is enabled"
    default: "true"
    allowedValues: ["true", "false"]
    tfVariable: "cluster_endpoint_public_access"
    
  - name: "ClusterEndpointPrivateAccess"
    type: "String"
    description: "Indicates whether or not the Amazon EKS private API server endpoint is enabled"
    default: "true"
    allowedValues: ["true", "false"]
    tfVariable: "cluster_endpoint_private_access"
    
  - name: "NodeGroupName"
    type: "String"
    description: "Name of the EKS node group"
    default: "eks-node-group"
    tfVariable: "node_group_name"
    
  - name: "NodeGroupInstanceType"
    type: "String"
    description: "Instance type for the EKS node group"
    default: "t3.medium"
    allowedValues: ["t3.medium", "t3.large", "m5.large", "m5.xlarge", "c5.large", "c5.xlarge"]
    tfVariable: "node_group_instance_type"
    
  - name: "NodeGroupDesiredCapacity"
    type: "Number"
    description: "Desired number of nodes in the EKS node group"
    default: 2
    minValue: 1
    maxValue: 10
    tfVariable: "node_group_desired_capacity"
    
  - name: "NodeGroupMinSize"
    type: "Number"
    description: "Minimum number of nodes in the EKS node group"
    default: 1
    minValue: 1
    maxValue: 10
    tfVariable: "node_group_min_size"
    
  - name: "NodeGroupMaxSize"
    type: "Number"
    description: "Maximum number of nodes in the EKS node group"
    default: 5
    minValue: 1
    maxValue: 20
    tfVariable: "node_group_max_size"
    
  - name: "EnableAwsLoadBalancerController"
    type: "String"
    description: "Enable AWS Load Balancer Controller add-on"
    default: "true"
    allowedValues: ["true", "false"]
    tfVariable: "enable_aws_load_balancer_controller"
    
  - name: "NodeScalingMethod"
    type: "String"
    description: "Select node scaling method (Karpenter or Cluster Autoscaler). Use Karpenter for modern, efficient scaling."
    default: "karpenter"
    allowedValues: ["karpenter", "cluster_autoscaler", "none"]
    tfVariable: "node_scaling_method"
    
  - name: "EnableKeda"
    type: "String"
    description: "Enable KEDA for pod autoscaling (works well with Karpenter)"
    default: "false"
    allowedValues: ["true", "false"]
    tfVariable: "enable_keda"
    
  - name: "EnableExternalDns"
    type: "String"
    description: "Enable External DNS add-on"
    default: "false"
    allowedValues: ["true", "false"]
    tfVariable: "enable_external_dns"
    
  - name: "ExternalDnsHostedZoneSource"
    type: "String"
    description: "Source for the External DNS hosted zone - use an existing hosted zone or create a new one"
    default: "existing"
    allowedValues: ["existing", "create"]
    tfVariable: "external_dns_hosted_zone_source"
    conditionalOnParameter: "EnableExternalDns"
    conditionalValue: "true"
    
  - name: "ExternalDnsExistingHostedZoneId"
    type: "String"
    description: "ID of an existing Route53 hosted zone (required if ExternalDnsHostedZoneSource is 'existing')"
    tfVariable: "external_dns_existing_hosted_zone_id"
    conditionalOnParameter: "ExternalDnsHostedZoneSource"
    conditionalValue: "existing"
    
  - name: "ExternalDnsDomain"
    type: "String"
    description: "Domain name for creating a new Route53 hosted zone (required if ExternalDnsHostedZoneSource is 'create')"
    tfVariable: "external_dns_domain"
    conditionalOnParameter: "ExternalDnsHostedZoneSource"
    conditionalValue: "create"
    
  - name: "EnablePrometheus"
    type: "String"
    description: "Enable Prometheus add-on"
    default: "false"
    allowedValues: ["true", "false"]
    tfVariable: "enable_prometheus"
    
  - name: "EnableSecretsManager"
    type: "String"
    description: "Enable AWS Secrets & Configuration Provider (ASCP) add-on"
    default: "false"
    allowedValues: ["true", "false"]
    tfVariable: "enable_secrets_manager"
    
  - name: "EnableCertManager"
    type: "String"
    description: "Enable Cert Manager add-on"
    default: "false"
    allowedValues: ["true", "false"]
    tfVariable: "enable_cert_manager"
    
  - name: "EnableNginxIngress"
    type: "String"
    description: "Enable NGINX Ingress Controller add-on"
    default: "false"
    allowedValues: ["true", "false"]
    tfVariable: "enable_nginx_ingress"
    
  - name: "EnableAdot"
    type: "String"
    description: "Enable AWS Distro for OpenTelemetry (ADOT) add-on"
    default: "false"
    allowedValues: ["true", "false"]
    tfVariable: "enable_adot"
    
  - name: "EnableFluentBit"
    type: "String"
    description: "Enable Fluent Bit for log collection add-on"
    default: "false"
    allowedValues: ["true", "false"]
    tfVariable: "enable_fluent_bit"
    
  - name: "TriggerGitlabPipeline"
    type: "String"
    description: "Enable triggering GitLab pipeline for Kubernetes components installation"
    default: "true"
    allowedValues: ["true", "false"]
    tfVariable: "trigger_gitlab_pipeline"

# Map of variables that aren't exposed as Service Catalog parameters but will be passed to Terraform
staticParameters:
  gitlab_token: "glptt-abc123def456ghi789" # Replace with your actual GitLab pipeline trigger token
  gitlab_project_id: "12345678" # Replace with your actual GitLab project ID
  gitlab_pipeline_ref: "main"

# Outputs that will be exposed to users after provisioning
outputs:
  - name: "ClusterId"
    description: "The name/id of the EKS cluster"
    tfOutput: "cluster_id"
    
  - name: "ClusterArn"
    description: "The Amazon Resource Name (ARN) of the cluster"
    tfOutput: "cluster_arn"
    
  - name: "ClusterEndpoint"
    description: "The endpoint for the EKS Kubernetes API"
    tfOutput: "cluster_endpoint"
    
  - name: "ClusterOidcIssuerUrl"
    description: "The URL on the EKS cluster for the OpenID Connect identity provider"
    tfOutput: "cluster_oidc_issuer_url"
    
  - name: "OidcProviderArn"
    description: "The ARN of the OIDC Provider"
    tfOutput: "oidc_provider_arn"
    
  - name: "VpcId"
    description: "The ID of the VPC"
    tfOutput: "vpc_id"